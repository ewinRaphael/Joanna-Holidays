<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">

<head>
    <!-- Basic Page Needs -->
    <meta charset="utf-8">
    <title>JOANNA - Admin Categories</title>

    <!-- Mobile Specific Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!-- Theme Style -->
    <link rel="stylesheet" type="text/css" href="admin-css/animate.min.css">
    <link rel="stylesheet" type="text/css" href="admin-css/animation.css">
    <link rel="stylesheet" type="text/css" href="admin-css/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="admin-css/bootstrap-select.min.css">
    <link rel="stylesheet" type="text/css" href="admin-css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


    <!-- Font -->
    <link rel="stylesheet" href="admin-font/fonts.css">

    <!-- Icon -->
    <link rel="stylesheet" href="admin-icon/style.css">

    <!-- Favicon and Touch Icons  -->
    <link rel="shortcut icon" href="/images/joannalogo.png">
    <link rel="apple-touch-icon-precomposed" href="/images/joannalogo.png">
    <style>
        .wg-table {
            width: 100%;
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 8px;
        }

        .table-title {
            font-weight: bold;
            border-bottom: 2px solid #ddd;
            padding-bottom: 10px;
        }

        .category-item {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        .category-details img,
        .subcategory-item img {
            border-radius: 4px;
        }

        .subcategory-list {
            margin-left: 20px;
        }

        .actions button {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .toggle-btn {
            background-color: #4CAF50;
            color: white;
        }

        .edit-btn {
            background-color: #2196F3;
            color: white;
        }

        .delete-btn {
            background-color: #f44336;
            color: white;
        }
    </style>
    <style>
        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }
        .modal.active {
    display: block;
}

        .modal-content {
            background-color: #fff;
            margin: 10% auto;
            padding: 20px;
            border-radius: 8px;
            width: 50%;
            max-width: 500px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: black;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        /* Switch styles */
        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .switch.small {
            width: 40px;
            height: 20px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
        }

        .switch.small .slider:before {
            height: 12px;
            width: 12px;
            left: 4px;
            bottom: 4px;
        }

        input:checked+.slider {
            background-color: #2196F3;
        }

        input:checked+.slider:before {
            transform: translateX(26px);
        }

        .switch.small input:checked+.slider:before {
            transform: translateX(20px);
        }

        .slider.round {
            border-radius: 34px;
        }

        .slider.round:before {
            border-radius: 50%;
        }

        /* Button styles */
        .edit-btn,
        .delete-btn,
        .add-sub-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .edit-btn {
            background-color: #4CAF50;
            color: white;
        }

        .delete-btn {
            background-color: #f44336;
            color: white;
        }

        .add-sub-btn {
            background-color: #2196F3;
            color: white;
        }

        .edit-btn.small,
        .delete-btn.small {
            padding: 3px 6px;
            font-size: 12px;
        }

        .subcategory-actions {
            margin-left: auto;
        }
    </style>
</head>

<body class="body">

    <!-- #wrapper -->
    <div id="wrapper">
        <!-- #page -->
        <div id="page" class="">
            <!-- layout-wrap -->
            <div class="layout-wrap loader-off">
                <!-- preload -->
                <div id="preload" class="preload-container">
                    <div class="preloading">
                        <span></span>
                    </div>
                </div>
                <!-- /preload -->
                <!-- section-menu-left -->
                <div class="section-menu-left">
                    <div class="box-logo">
                        <a href="/dashboard" id="site-logo-inner">
                            <img style="width:60px;" id="logo_header" alt="logo" src="/images/joannalogo.png"
                                data-light="/images/joannalogo.png" data-dark="/images/joannalogo.png">
                        </a>
                        <div class="button-show-hide">
                            <i class="icon-chevron-left"></i>
                        </div>
                    </div>
                    <div class="section-menu-left-wrap">
                        <div class="center">
                            <div class="center-item">
                                <ul>
                                    <li class="menu-item">
                                        <a href="/dashboard">
                                            <div class="icon">
                                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path fill-rule="evenodd" clip-rule="evenodd"
                                                        d="M12.2652 3.57566C12.1187 3.42921 11.8813 3.42921 11.7348 3.57566L5.25 10.0605V19.8748C5.25 20.0819 5.41789 20.2498 5.625 20.2498H9V16.1248C9 15.0893 9.83947 14.2498 10.875 14.2498H13.125C14.1605 14.2498 15 15.0893 15 16.1248V20.2498H18.375C18.5821 20.2498 18.75 20.0819 18.75 19.8748V10.0605L12.2652 3.57566ZM20.25 11.5605L21.2197 12.5302C21.5126 12.8231 21.9874 12.8231 22.2803 12.5302C22.5732 12.2373 22.5732 11.7624 22.2803 11.4695L13.3258 2.51499C12.5936 1.78276 11.4064 1.78276 10.6742 2.515L1.71967 11.4695C1.42678 11.7624 1.42678 12.2373 1.71967 12.5302C2.01256 12.8231 2.48744 12.8231 2.78033 12.5302L3.75 11.5605V19.8748C3.75 20.9104 4.58947 21.7498 5.625 21.7498H18.375C19.4105 21.7498 20.25 20.9104 20.25 19.8748V11.5605ZM13.5 20.2498H10.5V16.1248C10.5 15.9177 10.6679 15.7498 10.875 15.7498H13.125C13.3321 15.7498 13.5 15.9177 13.5 16.1248V20.2498Z"
                                                        fill="#111111" />
                                                </svg>
                                            </div>
                                            <div class="text">Admin Dashboard</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-packages" class="menu-item-button">
                                            <div class="icon"><i class="icon-file-plus"></i></div>
                                            <div class="text">Package Management</div>
                                        </a>
                                    
                                    </li>
                                    <li class="menu-item active">
                                        <a href="/admin-category" class="menu-item-button">
                                            <div class="icon"><i class="icon-layers"></i></div>
                                            <div class="text">Category Management</div>
                                        </a>
                                    
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-banner" class="menu-item-button">
                                            <div class="icon">
                                                <svg width="24" height="22" viewBox="0 0 22 18" fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path fill-rule="evenodd" clip-rule="evenodd"
                                                        d="M0.5 1.875C0.5 0.839466 1.33947 0 2.375 0H19.625C20.6605 0 21.5 0.839466 21.5 1.875V3.375C21.5 4.29657 20.8351 5.06285 19.9589 5.22035L19.3733 15.1762C19.28 16.7619 17.9669 18 16.3785 18H5.62154C4.03311 18 2.71999 16.7619 2.62671 15.1762L2.04108 5.22035C1.16485 5.06285 0.5 4.29657 0.5 3.375V1.875ZM2.75659 3.75C2.75266 3.74997 2.74873 3.74997 2.74479 3.75H2.375C2.16789 3.75 2 3.58211 2 3.375V1.875C2 1.66789 2.16789 1.5 2.375 1.5H19.625C19.8321 1.5 20 1.66789 20 1.875V3.375C20 3.58211 19.8321 3.75 19.625 3.75H19.2552C19.2513 3.74997 19.2473 3.74997 19.2434 3.75H2.75659ZM3.54541 5.25L4.12412 15.0881C4.17076 15.8809 4.82732 16.5 5.62154 16.5H16.3785C17.1727 16.5 17.8292 15.8809 17.8759 15.0881L18.4546 5.25H3.54541ZM8.24976 8.25C8.24976 7.83579 8.58554 7.5 8.99976 7.5H12.9998C13.414 7.5 13.7498 7.83579 13.7498 8.25C13.7498 8.66421 13.414 9 12.9998 9H8.99976C8.58554 9 8.24976 8.66421 8.24976 8.25Z"
                                                        fill="#111111" />
                                                </svg>
                                            </div>
                                            <div class="text">Banner Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-testimonials" class="menu-item-button">
                                            <div class="icon"><i class="fa fa-star-o"></i></div>
                                            <div class="text">Testimonials Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-gallery" class="menu-item-button">
                                            <div class="icon"><i class="icon-image"></i></div>
                                            <div class="text">Gallery Management</div>
                                        </a>
                                    
                                    </li>
                                    <li class="menu-item">
                                        <a href="/admin-blogs" class="menu-item-button">
                                            <div class="icon"><i class="icon-book-open"></i></div>
                                            <div class="text">Blogs Management</div>
                                        </a>
                                    </li>
                                    <li class="menu-item">
                                        <a href="/logout">
                                            <div class="icon">
                                                <svg width="24" height="22" viewBox="0 0 20 20" fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="M8.125 18.6875C8.125 18.903 8.0394 19.1097 7.88702 19.262C7.73465 19.4144 7.52799 19.5 7.3125 19.5H1.625C1.19402 19.5 0.780698 19.3288 0.475951 19.024C0.171205 18.7193 0 18.306 0 17.875V1.625C0 1.19402 0.171205 0.780698 0.475951 0.475951C0.780698 0.171205 1.19402 0 1.625 0H7.3125C7.52799 0 7.73465 0.0856026 7.88702 0.237976C8.0394 0.390349 8.125 0.597012 8.125 0.8125C8.125 1.02799 8.0394 1.23465 7.88702 1.38702C7.73465 1.5394 7.52799 1.625 7.3125 1.625H1.625V17.875H7.3125C7.52799 17.875 7.73465 17.9606 7.88702 18.113C8.0394 18.2653 8.125 18.472 8.125 18.6875ZM19.2623 9.17516L15.1998 5.11266C15.0474 4.9602 14.8406 4.87455 14.625 4.87455C14.4094 4.87455 14.2026 4.9602 14.0502 5.11266C13.8977 5.26511 13.812 5.47189 13.812 5.6875C13.812 5.90311 13.8977 6.10989 14.0502 6.26234L16.7263 8.9375H7.3125C7.09701 8.9375 6.89035 9.0231 6.73798 9.17548C6.5856 9.32785 6.5 9.53451 6.5 9.75C6.5 9.96549 6.5856 10.1722 6.73798 10.3245C6.89035 10.4769 7.09701 10.5625 7.3125 10.5625H16.7263L14.0502 13.2377C13.8977 13.3901 13.812 13.5969 13.812 13.8125C13.812 14.0281 13.8977 14.2349 14.0502 14.3873C14.2026 14.5398 14.4094 14.6255 14.625 14.6255C14.8406 14.6255 15.0474 14.5398 15.1998 14.3873L19.2623 10.3248C19.3379 10.2494 19.3978 10.1598 19.4387 10.0611C19.4796 9.9625 19.5006 9.85678 19.5006 9.75C19.5006 9.64322 19.4796 9.5375 19.4387 9.43886C19.3978 9.34023 19.3379 9.25062 19.2623 9.17516Z"
                                                        fill="#111111" />
                                                </svg>
                                            </div>
                                            <div class="text">Log out</div>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /section-menu-left -->
                <!-- section-content-right -->
                <div class="section-content-right">
                    <!-- header-dashboard -->
                    <div class="header-dashboard">
                        <div class="wrap">
                            <div class="header-left">
                                <a href="/dashboard">
                                    <img style="width: 50px;" id="logo_header_mobile" alt=""
                                        src="/images/joannalogo.png" data-light="/images/joannalogo.png"
                                        data-dark="/images/joannalogo.png">
                                </a>
                                <div class="button-show-hide">
                                    <i class="icon-chevron-left"></i>
                                </div>
                            </div>
                            <div class="header-grid">
                                <div class="header-item button-dark-light">
                                    <i class="icon-moon"></i>
                                </div>


                                <div class="header-item button-zoom-maximize">
                                    <div class="">
                                        <i class="icon-maximize"></i>
                                    </div>
                                </div>
                                <div class="popup-wrap user type-header">
                                    <div class="dropdown">
                                        <button class="btn btn-secondary dropdown-toggle" type="button"
                                            id="dropdownMenuButton3" data-bs-toggle="dropdown" aria-expanded="false">
                                            <span class="header-user wg-user">
                                                <span class="image">
                                                    <img src="admin-images/avatar/user-1.png" alt="">
                                                </span>
                                                <span class="flex flex-column">
                                                    <span class="body-text text-main-dark">JOANNA</span>
                                                    <span class="text-tiny">Admin</span>
                                                </span>
                                            </span>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end has-content"
                                            aria-labelledby="dropdownMenuButton3">

                                            <li>
                                                <a href="#" class="user-item">
                                                    <div class="icon">
                                                        <i class="icon-headphones"></i>
                                                    </div>
                                                    <div class="body-title-2">Support</div>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="/logout" class="user-item">
                                                    <div class="icon">
                                                        <i class="icon-log-out"></i>
                                                    </div>
                                                    <div class="body-title-2">Log out</div>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /header-dashboard -->
                    <!-- main-content -->
                    <div class="main-content">
                        <!-- main-content-wrap -->
                        <div class="main-content-inner">
                            <!-- main-content-wrap -->
                            <div class="main-content-wrap">
                                <div class="flex items-center flex-wrap justify-between gap20 mb-30">
                                    <h3>All category</h3>
                                    <ul class="breadcrumbs flex items-center flex-wrap justify-start gap10">
                                        <li>
                                            <a href="/dashboard">
                                                <div class="text-tiny">Dashboard</div>
                                            </a>
                                        </li>
                                        <li>
                                            <i class="icon-chevron-right"></i>
                                        </li>
                                        <li>
                                            <a href="/admin-category-list">
                                                <div class="text-tiny">Category</div>
                                            </a>
                                        </li>
                                        <li>
                                            <i class="icon-chevron-right"></i>
                                        </li>
                                        <li>
                                            <div class="text-tiny">All category</div>
                                        </li>
                                    </ul>
                                </div>
                                <!-- all-category -->
                                <div class="wg-box">
                                    <div class="flex items-center justify-between gap10 flex-wrap">
                                        <div class="flex gap10">
                                            <a class="tf-button style-1 w208" href="#" onclick="showAddCategoryModal()">
                                                <i class="icon-plus"></i>Add Category
                                            </a>
                                            <a class="tf-button style-3 w208" href="#"
                                                onclick="showAddSubCategoryModal()">
                                                <i class="icon-plus"></i>Add Subcategory
                                            </a>
                                        </div>
                                    </div>

                                    <div class="wg-table table-all-category">
                                        <ul class="table-title flex gap20 mb-14">
                                            <li>
                                                <div class="body-title">Category</div>
                                            </li>
                                            <li>
                                                <div class="body-title">Actions</div>
                                            </li>                                        
                                        </ul>
                                        <ul class="flex flex-column" id="category-list">
                                            <!-- Categories will be injected here dynamically -->
                                        </ul>
                                    </div>

                                    <div class="divider"></div>
                                </div>

                                <!-- Add Category Modal -->
                                <div id="addCategoryModal" class="modal">
                                    <div class="modal-content">
                                        <span class="close" onclick="closeModal('addCategoryModal')">&times;</span>
                                        <h4>Add New Category</h4>
                                        <form id="addCategoryForm" enctype="multipart/form-data">
                                            <div class="form-group">
                                                <label for="categoryName">Category Name</label>
                                                <input type="text" id="categoryName" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="categoryImage">Category Image</label>
                                                <input type="file" id="categoryImage" name="image" accept="image/*"
                                                    required>
                                            </div>
                                            <button type="submit" class="tf-button style-1">Save</button>
                                        </form>
                                    </div>
                                </div>

                                <!-- Add Subcategory Modal -->
                                <div id="addSubCategoryModal" class="modal">
                                    <div class="modal-content">
                                        <span class="close" onclick="closeModal('addSubCategoryModal')">&times;</span>
                                        <h4>Add New Subcategory</h4>
                                        <form id="addSubCategoryForm" enctype="multipart/form-data">
                                            <div class="form-group">
                                                <label for="parentCategory">Parent Category</label>
                                                <select id="parentCategory" name="parentCategory" required>
                                                    <option value="">Select a category</option>
                                                    <!-- Options will be populated dynamically -->
                                                </select>
                                            </div>
                                            <div class="form-group">
                                                <label for="subCategoryName">Subcategory Name</label>
                                                <input type="text" id="subCategoryName" name="name" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="subCategoryImage">Subcategory Image</label>
                                                <input type="file" id="subCategoryImage" name="image" accept="image/*"
                                                    >
                                            </div>
                                            <button type="submit" class="tf-button style-1">Save</button>
                                        </form>
                                    </div>
                                </div>

                                <!-- Edit Category Modal -->
                                <div id="editCategoryModal" class="modal">
                                    <div class="modal-content">
                                        <span class="close" onclick="closeModal('editCategoryModal')">&times;</span>
                                        <h4>Edit Category</h4>
                                        <form id="editCategoryForm" enctype="multipart/form-data">
                                            <input type="hidden" id="editCategoryId">
                                            <div class="form-group">
                                                <label for="editCategoryName">Category Name</label>
                                                <input type="text" id="editCategoryName" name="name" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="editCategoryImage">Category Image</label>
                                                <input type="file" id="editCategoryImage" name="image" accept="image/*">
                                            </div>
                                            <button type="submit" class="tf-button style-1">Update</button>
                                        </form>
                                    </div>
                                </div>

                                <!-- Edit Subcategory Modal -->
                                <div id="editSubCategoryModal" class="modal">
                                    <div class="modal-content">
                                        <span class="close" onclick="closeModal('editSubCategoryModal')">&times;</span>
                                        <h4>Edit Subcategory</h4>
                                        <form id="editSubCategoryForm" enctype="multipart/form-data">
                                            <input type="hidden" id="editParentCategoryId">
                                            <input type="hidden" id="editSubCategoryId">
                                            <div class="form-group">
                                                <label for="editSubCategoryName">Subcategory Name</label>
                                                <input type="text" id="editSubCategoryName" name="name" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="editSubCategoryImage">Subcategory Image</label>
                                                <input type="file" id="editSubCategoryImage" name="image"
                                                    accept="image/*">
                                            </div>
                                            <button type="submit" class="tf-button style-1">Update</button>
                                        </form>
                                    </div>
                                </div>
                                <!-- /all-category -->
                            </div>
                            <!-- /main-content-wrap -->
                        </div>
                        <!-- /main-content-wrap -->
                        <!-- bottom-page -->
                        <div class="bottom-page">
                            <div class="body-text">Copyright © 2025 <a href="">Joanna</a>.
                                Design by Harsh Creators All rights reserved</div>
                        </div>
                        <!-- /bottom-page -->
                    </div>
                    <!-- /main-content -->
                </div>
                <!-- /section-content-right -->
            </div>
            <!-- /layout-wrap -->
        </div>
        <!-- /#page -->
    </div>
    <!-- /#wrapper -->
    <script>
        // Global variable to store categories
        let allCategories = [];

        // Function to fetch categories from the backend
        async function fetchCategories() {
            try {
                const response = await fetch('/categories');
                const data = await response.json();
                allCategories = data.categories;
                renderCategories(allCategories);
                populateCategoryDropdown();
            } catch (error) {
                console.error("Error fetching categories:", error);
            }
        }

        // Function to render categories and subcategories
        function renderCategories(categories) {
            const categoryList = document.getElementById('category-list');
            categoryList.innerHTML = ''; // Clear existing content

            categories.forEach(category => {
                // Filter active subcategories
                const activeSubCategories = category.subCategories.filter(sub => sub.isActive);

                // Create category row
                const categoryRow = document.createElement('li');
                categoryRow.className = 'category-item flex gap20 align-center mb-14';
                categoryRow.style.opacity = category.isActive ? '1' : '0.6';

                // Category details
                categoryRow.innerHTML = `
            <div class="category-details flex align-center gap10">
                <img src="${category.imageUrl}" alt="${category.name}" width="100" height="50" style="object-filt:cover">
                <span class="body-text">${category.name}</span>
            </div>
            <div class="subcategory-list flex flex-column gap10">
                ${activeSubCategories.map(subcategory => `
                    <div class="subcategory-item flex align-center gap10" data-subcategory-name="${subcategory.name}" style="opacity: ${subcategory.isActive ? '1' : '0.6'}">
                        ${subcategory.imageUrl ? `<img src="${subcategory.imageUrl}" alt="${subcategory.name}" width="30" height="30">` : ''}
                        <span class="body-text">${subcategory.name}</span>
                    </div>
                `).join('')}
            </div>
            <div class="actions flex gap10">
                <label class="switch">
                    <input type="checkbox" onchange="toggleCategory('${category._id}')" ${category.isActive ? 'checked' : ''}>
                    <span class="slider round"></span>
                </label>
                <button style="height:50%" class="edit-btn" onclick="showEditCategoryModal('${category._id}')">Edit</button>
                <button style="height:50%" class="delete-btn" onclick="confirmDeleteCategory('${category._id}')">Delete</button>
                <button style="height:50%" class="add-sub-btn" onclick="showAddSubCategoryModal('${category._id}')">Add Sub</button>
            </div>
        `;

                // Append subcategory actions if there are subcategories
                if (activeSubCategories.length > 0) {
                    const subcategoryList = categoryRow.querySelector('.subcategory-list');
                    activeSubCategories.forEach(subcategory => {
                        // Find the subcategory item by data attribute
                        const subItems = subcategoryList.querySelectorAll('.subcategory-item');
                        const subItem = Array.from(subItems).find(item =>
                            item.dataset.subcategoryName === subcategory.name
                        );

                        if (subItem) {
                            const actionsDiv = document.createElement('div');
                            actionsDiv.className = 'subcategory-actions flex gap5';
                            actionsDiv.innerHTML = `
                        <label class="switch small">
                            <input type="checkbox" onchange="toggleSubCategory('${category._id}', '${subcategory._id}')" ${subcategory.isActive ? 'checked' : ''}>
                            <span class="slider round"></span>
                        </label>
                        <button class="edit-btn small" onclick="showEditSubCategoryModal('${category._id}', '${subcategory._id}')">Edit</button>
                        <button class="delete-btn small" onclick="confirmDeleteSubCategory('${category._id}', '${subcategory._id}')">Delete</button>
                    `;
                            subItem.appendChild(actionsDiv);
                        }
                    });
                }

                // Append category row to the list
                categoryList.appendChild(categoryRow);
            });
        }

        // Populate category dropdown for subcategory addition
        function populateCategoryDropdown() {
            const dropdown = document.getElementById('parentCategory');
            dropdown.innerHTML = '<option value="">Select a category</option>';

            allCategories.forEach(category => {
                if (category.isActive) {
                    const option = document.createElement('option');
                    option.value = category._id;
                    option.textContent = category.name;
                    dropdown.appendChild(option);
                }
            });
        }

        // Modal functions
        function showAddCategoryModal() {
            document.getElementById('addCategoryModal').style.display = 'block';
        }

        function showAddSubCategoryModal(categoryId) {
            const modal = document.getElementById('addSubCategoryModal');
            if (categoryId) {
                document.getElementById('parentCategory').value = categoryId;
            }
            modal.style.display = 'block';
        }

        function showEditCategoryModal(categoryId) {
            const category = allCategories.find(c => c._id === categoryId);
            if (!category) {
                console.error('Category not found');
                return;
            }

            const modal = document.getElementById('editCategoryModal');
            const form = document.getElementById('editCategoryForm');

            if (!modal || !form) {
                console.error('Modal or form elements not found');
                return;
            }
            // Clear any previous file selection
            form.reset();

            // Set form values
            document.getElementById('editCategoryId').value = categoryId;
            document.getElementById('editCategoryName').value = category.name;

            // Show modal
            modal.style.display = 'block';
        }

        function showEditSubCategoryModal(categoryId, subcategoryId) {
            const category = allCategories.find(c => c._id === categoryId);
            if (!category) {
                console.error('Category not found');
                return;
            }

            const subcategory = category.subCategories.find(s => s._id === subcategoryId);
            if (!subcategory) {
                console.error('Subcategory not found');
                return;
            }

            const modal = document.getElementById('editSubCategoryModal');
            const form = document.getElementById('editSubCategoryForm');

            if (!modal || !form) {
                console.error('Modal or form elements not found');
                return;
            }

            // Clear any previous file selection
            form.reset();

            // Set form values
            document.getElementById('editParentCategoryId').value = categoryId;
            document.getElementById('editSubCategoryId').value = subcategoryId;
            document.getElementById('editSubCategoryName').value = subcategory.name;

            // Show modal
            modal.style.display = 'block';
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'none';
            }
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function () {
            fetchCategories();
        });

        // Add Category Form
        document.getElementById('addCategoryForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const formData = new FormData();
            formData.append('name', document.getElementById('categoryName').value);
            formData.append('image', document.getElementById('categoryImage').files[0]);

            try {
                const response = await fetch('/categories', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    closeModal('addCategoryModal');
                    fetchCategories();
                    this.reset();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error adding category');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error adding category');
            }
        });

        // Add Subcategory Form
        document.getElementById('addSubCategoryForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const formData = new FormData();
            formData.append('name', document.getElementById('subCategoryName').value);
            
            // Only append image if one was selected
            const imageInput = document.getElementById('subCategoryImage');
            if (imageInput && imageInput.files && imageInput.files.length > 0) {
                formData.append('image', imageInput.files[0]);
            }

            const categoryId = document.getElementById('parentCategory').value;

            try {
                const response = await fetch(`/categories/${categoryId}/subcategories`, {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    closeModal('addSubCategoryModal');
                    fetchCategories();
                    this.reset();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error adding subcategory');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error adding subcategory');
            }
        });

        // Edit Category Form
        document.getElementById('editCategoryForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const formData = new FormData();
            formData.append('name', document.getElementById('editCategoryName').value);

            // Only append image if a new one was selected
            const imageInput = document.getElementById('editCategoryImage');
            if (imageInput.files[0]) {
                formData.append('image', imageInput.files[0]);
            }

            const id = document.getElementById('editCategoryId').value;

            try {
                const response = await fetch(`/categories/${id}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    closeModal('editCategoryModal');
                    fetchCategories();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error updating category');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating category');
            }
        });

        // Edit Subcategory Form
        document.getElementById('editSubCategoryForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const formData = new FormData();
            formData.append('name', document.getElementById('editSubCategoryName').value);

            // Only append image if a new one was selected
            const imageInput = document.getElementById('editSubCategoryImage');
            if (imageInput.files[0]) {
                formData.append('image', imageInput.files[0]);
            }

            const categoryId = document.getElementById('editParentCategoryId').value;
            const subcategoryId = document.getElementById('editSubCategoryId').value;

            try {
                const response = await fetch(`/categories/${categoryId}/subcategories/${subcategoryId}`, {
                    method: 'PUT',
                    body: formData
                });

                if (response.ok) {
                    closeModal('editSubCategoryModal');
                    fetchCategories();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error updating subcategory');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating subcategory');
            }
        });
        // Toggle functions
        async function toggleCategory(categoryId) {
            try {
                const response = await fetch(`/categories/${categoryId}/toggle`, {
                    method: 'PUT'
                });

                if (response.ok) {
                    fetchCategories();
                } else {
                    alert('Error toggling category status');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function toggleSubCategory(categoryId, subcategoryId) {
            try {
                const response = await fetch(`/categories/${categoryId}/subcategories/${subcategoryId}/toggle`, {
                    method: 'PUT'
                });

                if (response.ok) {
                    fetchCategories();
                } else {
                    alert('Error toggling subcategory status');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Delete confirmation functions
        function confirmDeleteCategory(categoryId) {
            if (confirm('Are you sure you want to delete this category and all its subcategories?')) {
                deleteCategory(categoryId);
            }
        }

        function confirmDeleteSubCategory(categoryId, subcategoryId) {
            if (confirm('Are you sure you want to delete this subcategory?')) {
                deleteSubCategory(categoryId, subcategoryId);
            }
        }

        // Delete functions
        async function deleteCategory(categoryId) {
            try {
                const response = await fetch(`/categories/${categoryId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    fetchCategories();
                } else {
                    alert('Error deleting category');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function deleteSubCategory(categoryId, subcategoryId) {
            try {
                const response = await fetch(`/categories/${categoryId}/subcategories/${subcategoryId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    fetchCategories();
                } else {
                    alert('Error deleting subcategory');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }


    </script>
    <!-- Javascript -->
    <script src="admin-js/jquery.min.js"></script>
    <script src="admin-js/bootstrap.min.js"></script>
    <script src="admin-js/bootstrap-select.min.js"></script>
    <script src="admin-js/zoom.js"></script>
    <script src="admin-js/switcher.js"></script>
    <script defer src="admin-js/theme-settings.js"></script>
    <script defer src="admin-js/main.js"></script>

</body>

</html>